package mappers;

import java.util.Date;
import java.io.IOException;

import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;

import util.TimestampParser;

public class Mapper5 extends Mapper<LongWritable, Text, LongWritable, Text> {
	/**Current timestamp*/
	protected Date currentTime = null;
	
	public void setup(Context context){
		/*Extract current timestamp*/
		currentTime = TimestampParser.parseDate((context.getConfiguration().get("current_timestamp")));
	
	}
	
	public void map (LongWritable key, Text value, Context context) throws IOException, InterruptedException{
		String items[] = value.toString().split(" ");
		String timeString = items[1]; //split out timestamp
		Date revisionTime = null;
		
		revisionTime = TimestampParser.parseDate((timeString));
	
		if(revisionTime.before(currentTime)){ //if revision happened before current time let it through
			context.write(key, value);
		}
	}
}
