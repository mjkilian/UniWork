package jobs;

import io.inputformats.Input1;
import io.outputformats.Output2;
import mappers.Mapper1;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.conf.Configured;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.util.Tool;
import org.apache.hadoop.util.ToolRunner;

import reducers.Reducer2;
/*Given a time interval (in the form of two timestamps, earlier one first), print all article_ids
for the pages modified in this interval, along with the number of modifications performed on
each of them and a space-separated list of the actual rev_ids*/

public class Task2 extends Configured implements Tool {
		public void usage(){
			System.err.println("Task2 ISO-8601_Timestamp_Earliest ISO-8061_Timestamp_Latest");
		}
		
		
	@Override
	public int run(String[] args) throws Exception {
		/* Set configuration */
		Configuration conf = new Configuration();
		// Set conf variables pointing to the BD4 cluster
		conf.set("fs.defaultFS", "hdfs://bigdata-06.dcs.gla.ac.uk:8020");
		conf.set("mapred.job.tracker", "bigdata-06.dcs.gla.ac.uk:8021");
		conf.set("mapred.jar", "file:///users/level4/1003819k/DatData/Code/Task2.jar");
		FileSystem fs = FileSystem.get(conf);
		fs.delete(new Path("/user/1003819k/output_folder/"), true);

		/* initialise Job */
		Job job = new Job(conf);
		job.setJobName("Task 2");
		job.setJarByClass(Task2.class);

		/* Read in timestamp arguments */
		if (args.length < 2) {
			usage();
			return 1;
		} else {
			job.getConfiguration().set("earliest_timestamp", args[0]);
			job.getConfiguration().set("latest_timestamp", args[1]);
		}

		/*
		 * Set I/O
		 */
		job.setInputFormatClass(Input1.class);
		job.setOutputFormatClass(Output2.class);


		/* Set classes for mappers/reducers */
		job.setMapperClass(Mapper1.class);
		job.setReducerClass(Reducer2.class);
		
		/* Set output key values */
		job.setOutputKeyClass(LongWritable.class);
		job.setOutputValueClass(Text.class);

		/*Set Paths*/
		FileInputFormat.addInputPath(job, new Path("/user/bd4-project1/enwiki-20080103-sample.txt"));
		FileOutputFormat.setOutputPath(job, new Path("/user/1003819k/output_folder/"));
		
		/* submit job */
		job.submit();
		return (job.waitForCompletion(true) ? 0 : 1);
	}

	public static void main(String[] args) throws Exception {
		 System.exit(ToolRunner.run(new Configuration(), new Task2(), args));
	}

}
